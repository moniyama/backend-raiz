{
  "swagger": "2.0",
  "info": {
    "description": "Esse é a API do BQ\n",
    "version": "1.0.0",
    "title": "Burger Queen API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "monicay@laboratoria.la"
    }
  },
  "host": "lab-api-bq.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "auth",
      "description": "Access to authentication"
    },
    {
      "name": "orders",
      "description": "Access to all orders"
    },
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "products",
      "description": "Operations about products"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create a token",
        "operationId": "createAuthToken",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "the user email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "the user password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          },
          "400": {
            "description": "email/senha inválido"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get all products",
        "description": "List all products",
        "operationId": "getProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Products"
              }
            }
          },
          "401": {
            "description": "usuário não autenticado"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Creates a new product",
        "operationId": "createProduct",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "name of the product",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "description": "price of the product",
            "required": true,
            "type": "number"
          },
          {
            "name": "flavor",
            "in": "formData",
            "description": "optional flavor of the product",
            "required": false,
            "type": "string"
          },
          {
            "name": "complement",
            "in": "formData",
            "description": "optional complement of the product",
            "required": false,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "optional image URL of the product",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "optional type - breakfast, all-day",
            "required": false,
            "type": "string"
          },
          {
            "name": "subType",
            "in": "formData",
            "description": "optional subType - hamburger, drinks",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Find product by ID",
        "description": "Returns a single product",
        "operationId": "getProductById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          },
          "401": {
            "description": "usuário não autenticado"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete product",
        "description": "Delete product",
        "operationId": "deleteProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          },
          "401": {
            "description": "User not authenticated"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List all users",
        "operationId": "getUsers",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Users"
              }
            }
          },
          "401": {
            "description": "User not authenticated"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "Create a new user",
        "operationId": "createUser",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "the user name - optional",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "the user email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "the user password",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "formData",
            "description": "the user role",
            "required": true,
            "type": "string"
          },
          {
            "name": "restaurant",
            "in": "formData",
            "description": "the user restaurant work",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          },
          "400": {
            "description": "Missing required data"
          },
          "401": {
            "description": "User not authenticated"
          },
          "403": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/users/{uid}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by Id",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "401": {
            "description": "User not authenticated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "description": "Update User role or name",
        "operationId": "updateUser",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "ID that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "the user email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "the user password",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "the new user name - optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "formData",
            "description": "the new user role - optional",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Missing required data"
          },
          "401": {
            "description": "User not authorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "401": {
            "description": "User not authenticated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "List all orders",
        "description": "Get all orders",
        "operationId": "getOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "401": {
            "description": "User not authenticated"
          }
        }
      }
    }
  },
  "definitions": {
    "Auth": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Users"
        },
        {}
      ]
    },
    "Orders": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "client_name": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "table": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "restaurant": {
          "type": "string"
        }
      }
    },
    "Products": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "flavor": {
          "type": "string"
        },
        "complement": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "image": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "subtype": {
          "type": "string"
        }
      }
    }
  }
}